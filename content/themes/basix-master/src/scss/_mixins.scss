// =========================================================================
// Mixins
// =========================================================================

// =========================================================================
// Media Queries - @include breakpoint(medium) {}
// =========================================================================

@mixin breakpoint($point) {

	@if $point == massive {
		@media (min-width: 2025px) { @content; }
	}
	@if $point == big {
		@media (max-width: 1270px) { @content; }
	}
	@if $point == large {
		@media (max-width: 1024px) { @content; }
	}
	@if $point == standard {
		@media (max-width: 980px) { @content; }
	}
	@else if $point == small {
		@media (max-width: 767px)  { @content; }
	}
	@else if $point == medium {
		@media (max-width: 650px)  { @content; }
	}
	@else if $point == tiny {
		@media (max-width: 320px)  { @content; }
	}

	@else if $point == vertical-large {
		@media (max-height: 900px)  { @content; }
	}
	@else if $point == vertical-medium {
		@media (max-height: 820px)  { @content; }
	}
	
}

// =========================================================================
// States - @include state() { color: $white; }
// =========================================================================

@mixin state() {
	&:hover,
	&:active,
	&:focus {
		@content;
	}
}

// =========================================================================
// RGBA - @include rgba(background-color, $red, 0.8, $red);
// =========================================================================

@mixin rgba($property, $color: #000, $value: 0.5, $fallback: #000) {
	#{$property}: rgb(red($fallback), green($fallback), blue($fallback));
	#{$property}: rgba($color, $value);
}

// =========================================================================
// Transition - @include transition(all, 0.3s, linear);
// =========================================================================

@mixin transition($transition-property, $transition-time, $method) {
	transition: $transition-property $transition-time $method;
}

@mixin no-transition($transition-time) {
	transition: none;
}

// =========================================================================
// Border Radius - @include border-radius(5px); @include border-top-radius(10px);
// =========================================================================
 
@mixin border-radius($radius) {
	border-radius: $radius;
	background-clip: padding-box; 
}

@mixin border-top-radius($radius) {
	border-top-right-radius: $radius;
	border-top-left-radius: $radius;
	background-clip: padding-box;
}
@mixin border-right-radius($radius) {
	border-bottom-right-radius: $radius;
	border-top-right-radius: $radius;
	background-clip: padding-box;
}
@mixin border-bottom-radius($radius) {
	border-bottom-right-radius: $radius;
	border-bottom-left-radius: $radius;
	background-clip: padding-box;
}
@mixin border-left-radius($radius) {
	border-bottom-left-radius: $radius;
	border-top-left-radius: $radius;
	background-clip: padding-box;
}

// =========================================================================
// Box Shadow - @include box-shadow(inset, 0, 1px, 1px, rgba(0, 0, 0, 0.5));
// =========================================================================

@mixin box-shadow($top, $left, $blur, $color, $inset:"") {
	box-shadow:$top $left $blur $color #{$inset};
}

// =========================================================================
// Opacity - @include opacity(.8);
// =========================================================================

@mixin opacity($trans) {
	zoom: 1;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$trans * 100})";
	opacity: $trans;
}

// =========================================================================
// Box Sizing - @include box-sizing(border-box);
// =========================================================================

@mixin box-sizing($box-model) {
	box-sizing: $box-model;
}

// =========================================================================
// Retina Images - @include image-2x("logo2x.png", 100px, 25px);
// =========================================================================

@mixin image-2x($image, $width, $height) {
	@media (min--moz-device-pixel-ratio: 1.3),
			(-o-min-device-pixel-ratio: 2.6/2),
			(-webkit-min-device-pixel-ratio: 1.3),
			(min-device-pixel-ratio: 1.3),
			(min-resolution: 1.3dppx) {
		background-image: url($image);
		background-size: $width $height;
	}
}

// =========================================================================
// Arrows - @include arrow(15px, #1e252b);
// =========================================================================

@mixin arrow($size, $background) {
	background: $background;
	display: inline-block;
	padding: $size;
	position: relative;
	margin-left: $size;
	&:before {
		content: '';
		position: absolute;
		left: -$size;
		top: 50%;
		transform: translateY(-50%);
		-webkit-transform: translateY(-50%);
		border-top: ($size / 2) solid transparent;
		border-right: $size solid $background;
		border-bottom: ($size / 2) solid transparent;
	}
}

// =========================================================================
// Placeholder Colour
// =========================================================================

@mixin placeholder ($placeholder: $white){
	
	::-webkit-input-placeholder {
		color: $placeholder;
	}
	:-moz-placeholder {
		color: $placeholder;  
	}
	::-moz-placeholder {
		color: $placeholder;  
	}
	:-ms-input-placeholder {  
		color: $placeholder;  
	}
  }
